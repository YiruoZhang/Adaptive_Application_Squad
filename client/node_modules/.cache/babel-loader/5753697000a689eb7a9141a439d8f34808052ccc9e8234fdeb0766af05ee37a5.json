{"ast":null,"code":"var _jsxFileName = \"D:\\\\Adaptive\\\\Adaptive\\\\client\\\\src\\\\components\\\\questionnaire.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import toast, { Toaster } from 'react-hot-toast';\n// import styles from '../styles/questionnaire.module.css';\n\n// export default function Quiz() {\n//   const [questionIndex, setQuestionIndex] = useState(0);\n//   const [score1, setScore1] = useState(0);\n//   const [score2, setScore2] = useState(0);\n//   const [isAnswered, setIsAnswered] = useState(false);\n//   const [answer, setAnswer] = useState('');\n//   const questions = [    \n//     {\n//       text: 'Am the life of the party',\n//       options: [\n//         { text: '1', value: 1 },\n//         { text: '2', value: 2 },\n//         { text: '3', value: 3 },\n//         { text: '4', value: 4 },\n//         { text: '5', value: 5 },\n//       ],\n//     },\n//     {\n//       text: 'Feel little concern for others',\n//       options: [\n//         { text: '1', value: 1 },\n//         { text: '2', value: 2 },\n//         { text: '3', value: 3 },\n//         { text: '4', value: 4 },\n//         { text: '5', value: 5 },\n//       ],\n//     },\n//     {\n//       text: 'Am always prepared',\n//       options: [\n//         { text: '1', value: 1 },\n//         { text: '2', value: 2 },\n//         { text: '3', value: 3 },\n//         { text: '4', value: 4 },\n//         { text: '5', value: 5 },\n//       ],\n//     },\n//   ];\n\n//   const handleAnswer = (value) => {\n//     const currentQuestion = questions[questionIndex];\n//     const answer1 = currentQuestion.options[0].value + currentQuestion.options[1].value - currentQuestion.options[2].value;\n//     const answer2 = currentQuestion.options[0].value - currentQuestion.options[1].value - currentQuestion.options[2].value;\n//     setScore1(score1 + answer1);\n//     setScore2(score2 + answer2);\n//     setIsAnswered(true);\n//     setAnswer(value);\n//   };\n\n//   const handleNext = () => {\n//     setIsAnswered(false);\n//     setAnswer('');\n//     if (questionIndex === questions.length - 1) {\n//       toast.success(`Your score 1 is ${score1}, and score 2 is ${score2}`);\n//     } else {\n//       setQuestionIndex(questionIndex + 1);\n//     }\n//   };\n\n//   const currentQuestion = questions[questionIndex];\n\n//   return (\n//     <div className=\"container mx-auto\">\n//       <Toaster position=\"top-center\" reverseOrder={false} />\n//       <div className=\"flex justify-center items-center\" style={{ marginTop: '3rem', marginBottom: '3rem' }}>\n//         <div className={styles.quiz}>\n//           <h5 className={styles.question}>{currentQuestion.text}</h5>\n//           <div className={styles.options}>\n//             {currentQuestion.options.map((option, index) => (\n//               <div key={index} className={styles.option} onClick={() => handleAnswer(option.value)}>\n//                 {option.text}\n//               </div>\n//             ))}\n//           </div>\n//           {isAnswered && (\n//             <div className={styles.feedback}>\n//               <div className={styles.answer}>{`Your answer 1: ${score1 + currentQuestion.options.find((option) => option.value === answer)?.value}`}</div>\n//                 <button className={styles.button} onClick={handleNext}>\n//                   {questionIndex === questions.length - 1 ? 'Finish' : 'Next'}\n//                 </button>\n//                </div>\n//           )}\n\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport styles from '../styles/questionnaire.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [answer, setAnswer] = useState('');\n  const [answer1, setAnswer1] = useState(0);\n  const [answer2, setAnswer2] = useState(0);\n  const questions = [{\n    text: 'Am the life of the party',\n    options: [{\n      text: '1',\n      value: 10\n    }, {\n      text: '2',\n      value: 1\n    }]\n  }, {\n    text: 'Feel little concern for others',\n    options: [{\n      text: '1',\n      value: 10\n    }, {\n      text: '2',\n      value: 1\n    }]\n  }];\n  const handleAnswer = value => {\n    const currentQuestion = questions[questionIndex];\n    const answer1 = currentQuestion.options[0].value + currentQuestion.options[1].value;\n    const answer2 = currentQuestion.options[0].value - currentQuestion.options[1].value;\n    setAnswer1(answer1);\n    setAnswer2(answer2);\n    setIsAnswered(true);\n    setAnswer(value);\n  };\n  const handleNext = () => {\n    setIsAnswered(false);\n    setAnswer('');\n    if (questionIndex === questions.length - 1) {\n      toast.success(`Your answer 1 is ${answer1}, and answer 2 is ${answer2}`);\n    } else {\n      setQuestionIndex(questionIndex + 1);\n    }\n  };\n  const currentQuestion = questions[questionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-center\",\n      reverseOrder: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center\",\n      style: {\n        marginTop: '3rem',\n        marginBottom: '3rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.quiz,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: styles.question,\n          children: currentQuestion.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.options,\n          children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.option,\n            onClick: () => handleAnswer(option.value),\n            children: option.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), isAnswered && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.feedback,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.answer,\n            children: `Your answer 1: ${answer1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.answer,\n            children: `Your answer 2: ${answer2}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: handleNext,\n            children: questionIndex === questions.length - 1 ? 'Finish' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"J502xW6lSuaaMiWWMwdCsTWqb1w=\");\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","toast","Toaster","styles","Quiz","questionIndex","setQuestionIndex","isAnswered","setIsAnswered","answer","setAnswer","answer1","setAnswer1","answer2","setAnswer2","questions","text","options","value","handleAnswer","currentQuestion","handleNext","length","success","marginTop","marginBottom","quiz","question","map","option","index","feedback","button"],"sources":["D:/Adaptive/Adaptive/client/src/components/questionnaire.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import toast, { Toaster } from 'react-hot-toast';\r\n// import styles from '../styles/questionnaire.module.css';\r\n\r\n// export default function Quiz() {\r\n//   const [questionIndex, setQuestionIndex] = useState(0);\r\n//   const [score1, setScore1] = useState(0);\r\n//   const [score2, setScore2] = useState(0);\r\n//   const [isAnswered, setIsAnswered] = useState(false);\r\n//   const [answer, setAnswer] = useState('');\r\n//   const questions = [    \r\n//     {\r\n//       text: 'Am the life of the party',\r\n//       options: [\r\n//         { text: '1', value: 1 },\r\n//         { text: '2', value: 2 },\r\n//         { text: '3', value: 3 },\r\n//         { text: '4', value: 4 },\r\n//         { text: '5', value: 5 },\r\n//       ],\r\n//     },\r\n//     {\r\n//       text: 'Feel little concern for others',\r\n//       options: [\r\n//         { text: '1', value: 1 },\r\n//         { text: '2', value: 2 },\r\n//         { text: '3', value: 3 },\r\n//         { text: '4', value: 4 },\r\n//         { text: '5', value: 5 },\r\n//       ],\r\n//     },\r\n//     {\r\n//       text: 'Am always prepared',\r\n//       options: [\r\n//         { text: '1', value: 1 },\r\n//         { text: '2', value: 2 },\r\n//         { text: '3', value: 3 },\r\n//         { text: '4', value: 4 },\r\n//         { text: '5', value: 5 },\r\n//       ],\r\n//     },\r\n//   ];\r\n\r\n//   const handleAnswer = (value) => {\r\n//     const currentQuestion = questions[questionIndex];\r\n//     const answer1 = currentQuestion.options[0].value + currentQuestion.options[1].value - currentQuestion.options[2].value;\r\n//     const answer2 = currentQuestion.options[0].value - currentQuestion.options[1].value - currentQuestion.options[2].value;\r\n//     setScore1(score1 + answer1);\r\n//     setScore2(score2 + answer2);\r\n//     setIsAnswered(true);\r\n//     setAnswer(value);\r\n//   };\r\n\r\n//   const handleNext = () => {\r\n//     setIsAnswered(false);\r\n//     setAnswer('');\r\n//     if (questionIndex === questions.length - 1) {\r\n//       toast.success(`Your score 1 is ${score1}, and score 2 is ${score2}`);\r\n//     } else {\r\n//       setQuestionIndex(questionIndex + 1);\r\n//     }\r\n//   };\r\n\r\n//   const currentQuestion = questions[questionIndex];\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto\">\r\n//       <Toaster position=\"top-center\" reverseOrder={false} />\r\n//       <div className=\"flex justify-center items-center\" style={{ marginTop: '3rem', marginBottom: '3rem' }}>\r\n//         <div className={styles.quiz}>\r\n//           <h5 className={styles.question}>{currentQuestion.text}</h5>\r\n//           <div className={styles.options}>\r\n//             {currentQuestion.options.map((option, index) => (\r\n//               <div key={index} className={styles.option} onClick={() => handleAnswer(option.value)}>\r\n//                 {option.text}\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//           {isAnswered && (\r\n//             <div className={styles.feedback}>\r\n//               <div className={styles.answer}>{`Your answer 1: ${score1 + currentQuestion.options.find((option) => option.value === answer)?.value}`}</div>\r\n//                 <button className={styles.button} onClick={handleNext}>\r\n//                   {questionIndex === questions.length - 1 ? 'Finish' : 'Next'}\r\n//                 </button>\r\n//                </div>\r\n//           )}\r\n\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React, { useState } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport styles from '../styles/questionnaire.module.css';\r\n\r\nexport default function Quiz() {\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n  const [isAnswered, setIsAnswered] = useState(false);\r\n  const [answer, setAnswer] = useState('');\r\n  const [answer1, setAnswer1] = useState(0);\r\n  const [answer2, setAnswer2] = useState(0);\r\n\r\n  const questions = [\r\n    {\r\n      text: 'Am the life of the party',\r\n      options: [\r\n        { text: '1', value: 10 },\r\n        { text: '2', value: 1 },\r\n      ],\r\n    },\r\n    {\r\n      text: 'Feel little concern for others',\r\n      options: [\r\n        { text: '1', value: 10 },\r\n        { text: '2', value: 1 },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const handleAnswer = (value) => {\r\n    const currentQuestion = questions[questionIndex];\r\n    const answer1 = currentQuestion.options[0].value + currentQuestion.options[1].value;\r\n    const answer2 = currentQuestion.options[0].value - currentQuestion.options[1].value;\r\n    setAnswer1(answer1);\r\n    setAnswer2(answer2);\r\n    setIsAnswered(true);\r\n    setAnswer(value);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setIsAnswered(false);\r\n    setAnswer('');\r\n    if (questionIndex === questions.length - 1) {\r\n      toast.success(`Your answer 1 is ${answer1}, and answer 2 is ${answer2}`);\r\n    } else {\r\n      setQuestionIndex(questionIndex + 1);\r\n    }\r\n  }\r\n  \r\n  const currentQuestion = questions[questionIndex];\r\n  \r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <Toaster position=\"top-center\" reverseOrder={false} />\r\n      <div className=\"flex justify-center items-center\" style={{ marginTop: '3rem', marginBottom: '3rem' }}>\r\n        <div className={styles.quiz}>\r\n          <h5 className={styles.question}>{currentQuestion.text}</h5>\r\n          <div className={styles.options}>\r\n            {currentQuestion.options.map((option, index) => (\r\n              <div key={index} className={styles.option} onClick={() => handleAnswer(option.value)}>\r\n                {option.text}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {isAnswered && (\r\n            <div className={styles.feedback}>\r\n              <div className={styles.answer}>{`Your answer 1: ${answer1}`}</div>\r\n              <div className={styles.answer}>{`Your answer 2: ${answer2}`}</div>\r\n              <button className={styles.button} onClick={handleNext}>\r\n                {questionIndex === questions.length - 1 ? 'Finish' : 'Next'}\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}